/////////////////////////////////////////////////////////////////////
////
//// AUTOGENERATED FILE - DO NOT EDIT
//// DRM SCRIPT VERSION 2.1.0
//// DRM HDK VERSION 4.2.1.0
//// DRM VERSION 4.2.1
//// COPYRIGHT (C) ALGODONE
////
/////////////////////////////////////////////////////////////////////

module drm_ip_controller_wrapper #(
      parameter sys_bus_adr_begin       = 0,
      parameter sys_bus_adr_size        = 16,
      parameter sys_bus_dat_size        = 32,
      parameter read_write_mailbox_size = 16,  // read write mailbox size in number of 32 bits words
      parameter read_only_mailbox_data  = 1280'h6B70227B65765F676F697372223A226E2E302E3163722D30222C22325F616E646570797472223A226F646E6164695F6D70222C2275646F72695F74637B3A22646E65762222726F646361223A696C6563632E657A2C226D6F62696C227972617267223A227568746965675F626E69747461747367646574726E222C2222656D613130223A6C74725F72656B5F226C656E6973222C3A226E677D7D222200000000   // read only mailbox data (left is the first read only mailbox word)
  ) (
    // axi4 lite slave clock and reset
    input  wire                          sys_axi4_aclk,
    input  wire                          sys_axi4_arstn,
    // axi4 lite slave address write channel
    input  wire                          sys_axi4_bus_slave_i_aw_valid,
    input  wire [sys_bus_adr_size-1:0]   sys_axi4_bus_slave_i_aw_addr,
    input  wire [2:0]                    sys_axi4_bus_slave_i_aw_prot,
    output wire                          sys_axi4_bus_slave_o_aw_ready,
    // axi4 lite slave address read channel
    input  wire                          sys_axi4_bus_slave_i_ar_valid,
    input  wire [sys_bus_adr_size-1:0]   sys_axi4_bus_slave_i_ar_addr,
    input  wire [2:0]                    sys_axi4_bus_slave_i_ar_prot,
    output wire                          sys_axi4_bus_slave_o_ar_ready,
    // axi4 lite slave data write channel
    input  wire                          sys_axi4_bus_slave_i_w_valid,
    input  wire [sys_bus_dat_size-1:0]   sys_axi4_bus_slave_i_w_data,
    input  wire [sys_bus_dat_size/8-1:0] sys_axi4_bus_slave_i_w_strb,
    output wire                          sys_axi4_bus_slave_o_w_ready,
    // axi4 lite slave data read channel
    input  wire                          sys_axi4_bus_slave_i_r_ready,
    output wire                          sys_axi4_bus_slave_o_r_valid,
    output wire [sys_bus_dat_size-1:0]   sys_axi4_bus_slave_o_r_data,
    output wire [1:0]                    sys_axi4_bus_slave_o_r_resp,
    // axi4 lite slave write response channel
    input  wire                          sys_axi4_bus_slave_i_b_ready,
    output wire                          sys_axi4_bus_slave_o_b_valid,
    output wire [1:0]                    sys_axi4_bus_slave_o_b_resp,
    // chip dna bus
    output wire                          chip_dna_valid,
    output wire [63:0]                   chip_dna,
    // drm bus clock and reset
    input wire                           drm_aclk,
    input wire                           drm_arstn,
    // drm bus master common socket
    output wire                          drm_bus_master_o_cyc,
    output wire                          drm_bus_master_o_we,
    output wire [1:0]                    drm_bus_master_o_adr,
    output wire                          drm_bus_master_o_dat,
    // drm bus master ip 0 socket
    output wire                          drm_bus_master_o_cs_0,
    input  wire                          drm_bus_master_i_ack_0,
    input  wire                          drm_bus_master_i_sta_0,
    input  wire                          drm_bus_master_i_intr_0,
    input  wire                          drm_bus_master_i_dat_0
  );

  drm_ip_controller #(
    .SYS_BUS_ADR_BEGIN(sys_bus_adr_begin),
    .SYS_BUS_ADR_SIZE(sys_bus_adr_size),
    .SYS_BUS_DAT_SIZE(sys_bus_dat_size),
    .READ_WRITE_MAILBOX_SIZE(read_write_mailbox_size),
    .READ_ONLY_MAILBOX_DATA(read_only_mailbox_data)
  ) drm_ip_controller_inst (
    // AXI4 LITE Slave clock and reset
    .SYS_AXI4_ACLK                    (sys_axi4_aclk),
    .SYS_AXI4_ARSTN                   (sys_axi4_arstn),
    // AXI4 LITE Slave address write channel
    .SYS_AXI4_BUS_SLAVE_I_AW_VALID    (sys_axi4_bus_slave_i_aw_valid),
    .SYS_AXI4_BUS_SLAVE_I_AW_ADDR     (sys_axi4_bus_slave_i_aw_addr),
    .SYS_AXI4_BUS_SLAVE_I_AW_PROT     (sys_axi4_bus_slave_i_aw_prot),
    .SYS_AXI4_BUS_SLAVE_O_AW_READY    (sys_axi4_bus_slave_o_aw_ready),
    // AXI4 LITE Slave address readchannel
    .SYS_AXI4_BUS_SLAVE_I_AR_VALID    (sys_axi4_bus_slave_i_ar_valid),
    .SYS_AXI4_BUS_SLAVE_I_AR_ADDR     (sys_axi4_bus_slave_i_ar_addr),
    .SYS_AXI4_BUS_SLAVE_I_AR_PROT     (sys_axi4_bus_slave_i_ar_prot),
    .SYS_AXI4_BUS_SLAVE_O_AR_READY    (sys_axi4_bus_slave_o_ar_ready),
    // AXI4 LITE Slave data write channel
    .SYS_AXI4_BUS_SLAVE_I_W_VALID     (sys_axi4_bus_slave_i_w_valid),
    .SYS_AXI4_BUS_SLAVE_I_W_DATA      (sys_axi4_bus_slave_i_w_data),
    .SYS_AXI4_BUS_SLAVE_I_W_STRB      (sys_axi4_bus_slave_i_w_strb),
    .SYS_AXI4_BUS_SLAVE_O_W_READY     (sys_axi4_bus_slave_o_w_ready),
    // AXI4 LITE Slave data read channel
    .SYS_AXI4_BUS_SLAVE_I_R_READY     (sys_axi4_bus_slave_i_r_ready),
    .SYS_AXI4_BUS_SLAVE_O_R_VALID     (sys_axi4_bus_slave_o_r_valid),
    .SYS_AXI4_BUS_SLAVE_O_R_DATA      (sys_axi4_bus_slave_o_r_data),
    .SYS_AXI4_BUS_SLAVE_O_R_RESP      (sys_axi4_bus_slave_o_r_resp),
    // AXI4 LITE Slave write response channel
    .SYS_AXI4_BUS_SLAVE_I_B_READY     (sys_axi4_bus_slave_i_b_ready),
    .SYS_AXI4_BUS_SLAVE_O_B_VALID     (sys_axi4_bus_slave_o_b_valid),
    .SYS_AXI4_BUS_SLAVE_O_B_RESP      (sys_axi4_bus_slave_o_b_resp),
    // Chip dna bus
    .CHIP_DNA_VALID                   (chip_dna_valid),
    .CHIP_DNA                         (chip_dna),
    // DRM Bus clock and reset
    .DRM_ACLK                         (drm_aclk),
    .DRM_ARSTN                        (drm_arstn),
    // DRM Bus master common socket
    .DRM_BUS_MASTER_O_CYC             (drm_bus_master_o_cyc),
    .DRM_BUS_MASTER_O_WE              (drm_bus_master_o_we),
    .DRM_BUS_MASTER_O_ADR             (drm_bus_master_o_adr),
    .DRM_BUS_MASTER_O_DAT             (drm_bus_master_o_dat),
    // drm bus master ip 0 socket
    .DRM_BUS_MASTER_O_CS_0            (drm_bus_master_o_cs_0),
    .DRM_BUS_MASTER_I_ACK_0           (drm_bus_master_i_ack_0),
    .DRM_BUS_MASTER_I_STA_0           (drm_bus_master_i_sta_0),
    .DRM_BUS_MASTER_I_INTR_0          (drm_bus_master_i_intr_0),
    .DRM_BUS_MASTER_I_DAT_0           (drm_bus_master_i_dat_0)
  );

endmodule